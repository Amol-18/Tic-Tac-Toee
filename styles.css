function checkForWinner() {
  let roundWon = false;

  for (let condition of winningConditions) {
    const [a, b, c] = condition;
    if (gameState[a] === '' || gameState[b] === '' || gameState[c] === '') continue;

    if (gameState[a] === gameState[b] && gameState[b] === gameState[c]) {
      roundWon = true;
      cells[a].classList.add('winner');
      cells[b].classList.add('winner');
      cells[c].classList.add('winner');
      winSound.play();
      confetti.render(); // Start confetti animation
      break;
    }
  }

  if (roundWon) {
    statusText.textContent = `${currentPlayer === 'X' ? playerXName : playerOName} Wins! üéâ`;
    if (currentPlayer === 'X') scoreX++;
    else scoreO++;
    updateScore();
    gameActive = false;
    return;
  }

  if (!gameState.includes('')) {
    statusText.textContent = "It's a Draw! ü§ù";
    drawSound.play();
    gameActive = false;
    return;
  }

  currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
  statusText.textContent = `${currentPlayer === 'X' ? playerXName : playerOName}'s Turn`;
}
